@model SalesFiguresAPI.Models.HomePageViewModel
@{ 
    string test = string.Empty;
}
<div class="row">
    @Html.EnumDropDownListFor(m => m.StoreName, "Select My Home Store", new { @class = "form-control" })
</div>

<div class="col-md-6 col-sm-12">
    <div class="row">
        <h3>Todays Sales: @Model.TodaysSalesTotal</h3>
        <h3>Sales Last Year: @Model.LastYearTodaysSalesTotal</h3>
    </div>

    <div class="row">
        @Model.TableData
    </div>


    <div class="row">
        Online-Dispatches:
        Nil Picks:
    </div>

    @*Only Knightsbridge*@
    <div class="row">
        @foreach (var storeData in Model.TodayCumulativeFigures)
        {
            <div class="alert-info">
                @(storeData.StoreName) Cumulative Daily Sales
            </div>
            <canvas id="@(storeData.StoreId + "canvas")" width="600" height="200"></canvas>
        }
    </div>

</div>

<div class="col-md-6 col-sm-12">
    <div class="row">
        <div class="alert-info">
            Sale By Family of Business
        </div>

        @Model.SalesByFamily
    </div>

    <div>
        <div class="alert-info">
            Family of Business By Hour
        </div>

        @Model.AllStoresThisYearAndLast
    </div>
    <div>
        <div class="alert-info">
            Family of Business By Hour
        </div>
            @Model.AllStoresThisYearAndLast
    </div>
</div>

@section Scripts{
    <script>

        $('#StoreName').on('change',function()
        {
            window.location.href = "/home/store/" + this.value;
        });

        var results = @Html.Raw(Json.Encode(Model.TodayCumulativeFigures));

        for(var i = 0; i< results.length; i++){
            var nameOfCanvas = results[i].StoreId + 'canvas';
            var context = $("#"+nameOfCanvas).get(0).getContext("2d");

            var storeData = results[i].Data;

            var todaysValues = $.map(storeData, function(elem, i) {
                if (elem.TodaysValue == 0 && i > 0){
                    return undefined;                
                }
                else {
                    return elem.TodaysValue;;
                }
            });

            var lastYearsValues = storeData.map(function(a) {return a.LastYearsValue;});
            var xaxis = storeData.map(function (a) { return a.Hour });

            var data = {
                labels: xaxis,
                datasets: [
                    {
                        label: 'Todays Values',
                        fill: false,
                        spanGaps: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,0.4)",
                        borderColor: "rgba(75,192,192,1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: "rgba(75,192,192,1)",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: todaysValues
                    },
                    {
                        label: 'Last Years Values',
                        fill: false,
                        spanGaps: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(57,125,2,0.4)",
                        borderColor: "#397D02",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: "#397D02",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "#397D02",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: lastYearsValues
                    }]
            }
            var myNewChart = new Chart(context, {
                type: "line",
                data: data
            });
        }
    </script>
}